ALL ABOUT PROCESSES

To get pid of given name
PID = ps ax | grep 'converter' | cut -d ' ' -f 1
kill $PID

List processes
$ ps a 

List processes of given name
$ ps -ef | grep 'converter'

=====================================================
ALL ABOUT FOLDERS/FILES

remove file if exist
rm -f <file_name>

remove folder if exist
rm -rf <folder_name>

Make folder (at another location)
sudo mkdir /opt/awsc

Move folder (at another location)
sudo mv lib /opt/awsc/lib

Assigned folder permission (at another location)
sudo chmod 755 /opt/awsc/lib

Changed Owener/user of the folder
sudo chown -R awsc:awsc /var/awsc/logs

=====================================================
ALL ABOUT GROUPS

Create the group - you should then run (as root):
$ su -
Password: ****  <root password>

$ groupadd <groupName>
$ groupadd awsc
$ tail /etc/group
...
awsc:x:507:
---------------------------------------------

Create a user and add it to the group (here we use awsc for both)
$ useradd -g <groupName> <userName>
$ useradd -g awsc awsc
$ tail /etc/passwd
...
awsc:x:507:507::/home/awsc:/bin/bash
---------------------------------------------

Add user to other groups
usermod -a -G <groupName(s)> <userName>
$ usermod -a -G mqm,oracle,dba awsc

---------------------------------------------

Display all the groups the user currently belongs to.
$ groups <userName>
$ groups awsc
...
awsc : awsc oracle dba mqm
---------------------------------------------

Change folder ownership and group

chown -R <username>:<group> <directory>
chown -R awsc:awsc aconite


=====================================================
ALL ABOUT PERMISSION

chmod 775 *

-------------------
Assign password to awsc user
passwd <USERNAME>
$ passwd awsc 
$ password ....<awsc password is Ac0n1te>

=====================================================
ALL ABOUT SEARCH

//http://www.cyberciti.biz/faq/howto-search-find-file-for-text-string/

Task: Search all subdirectories recursively
You can search for a text string all files under each directory, recursively with -r option:
$ grep -r "redeem reward" /home/tom/
OR
$ grep -R "redeem reward" /home/tom/

----------------------------

Task: Only display filenames
By default, the grep command prints the matching lines. You can pass -H option to print the filename for each match:
$ grep -H -r "redeem reward" /home/tom

----------------------------

Task: Suppress file names
The grep command shows output on a separate line, and it is preceded by the name of the file in which it was found in the case of multiple files. You can pass the -h option to suppress inclusion of the file names in the output:
$ grep -h -R 'main()' ~/projects/*.c

----------------------------

Task: Display only words
You can select only those lines containing matches that form whole words using the -w option. In this example, search for word 'getMyData()' only in ~/projects/ dirctory:
$ grep -w -R 'getMyData()' ~/projects/

----------------------------

Task: Search for two or more words
Use the egrep command as follows:
$ egrep -w -R 'word1|word2' ~/projects/

----------------------------

Task: Hide warning spam
grep command generate error message as follows due to permission and other issues:
    No such file or directory
    No such device or address
    Permission denied

To hide all errors or warning message spam generated by the grep command, append 2>/dev/null to grep command. This will send and hide unwanted output to /dev/null device:
$ grep -w -R 'getMyData()' ~/projects/ 2>/dev/null

----------------------------

Task: Display matched text in color
Pass the --color option to the grep command display matched text/words in color on the terminal:

grep --color 'word' file
grep --color -R 'word' /path/to/dir
grep --color -R "192.168.1.5" /etc/
grep --color -R -h "192.168.1.5" /etc/
grep --color -R -h "192.168.1.5" /etc/ 2>/dev/null

----------------------------

Task: Ignore case
Our final example ignore case distinctions in both the search PATTERN and the input files:
grep -i -R 'word' /path/to/dir
grep -i -r 'income tax' ~/accounting/

=====================================================
#####################################################
=====================================================
//http://superuser.com/questions/490764/while-loop-until-a-file-exists-in-bash
The space between the file argument and the closing bracket is important.

if [ -f "path" ]; then echo good;fi

if [-f "path"] ; then  echo bad;fi
if [ -f "path"]; then  echo bad;fi
if [-f "path" ]; then  echo bad;fi


======================================================

Loop will continue till file exist

export PID_LOG=$AWSC_LOG/awsc*.pid

while : ; do
	[[ ! -f $PID_LOG ]] && break
	echo "Pausing until file vanishes"
	sleep 2
done

-----------------------------------------------------

Get PID pf the running imidiate background process
//http://superuser.com/questions/238412/write-a-pid-file-manually-from-bash-script
//You can easily run the process in the background with "&", then get the PID of the background process using "$!"

#!/bin/bash
export PID_LOG=$AWSC_HOME/awsc.pid
rm -f $PID_LOG
java -Dmq-converter-log-dir=$AWSC_HOME/logs -cp $AWSC_JARS:$MQ_JARS net.aconite.wrapper.service.WrapperServerMain &
echo $! >> $PID_LOG

.......
//http://superuser.com/questions/238412/write-a-pid-file-manually-from-bash-script
//exec replaces bash with the specified program, retaining the PID.

#!/bin/bash
echo $$ > fooapp.pid
exec fooapp

.......

Get PID of running any process

ps ax | grep 'converter' | cut -d ' ' -f 1 >> xx.pid.log
# kill $PID
echo $$ $BASHPID >> xx.pid.log

=====================================================
ALL ABOUT Sys V file

move sysV files into /etc/init.d folder

Add to list of services using chkconfig (When server startup the service will be start and when it down service will be stop)

    $ sudo chkconfig awsc on
	
Remove from list of services using chkconfig

    $ sudo chkconfig awsc off
	
----------------------------------

Run the service manually

    $ sudo service awsc start
	
Stop the service manually

    $ sudo service awsc stop

======================================================
################################################################################################
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

SAMPLES :

First create the group:
$ su -
Password: ****  <root password>
$ groupadd awsc
$ tail /etc/group
...
awsc:x:507:

Then create a user and add it to the group (here we use awsc for both)
$ useradd -g awsc awsc
$ tail /etc/passwd
...
awsc:x:507:507::/home/awsc:/bin/bash

Add user to other groups
$ usermod -a -G mqm,oracle,dba awsc
$ groups awsc
...
awsc : awsc oracle dba mqm


Assign password to awsc user
passwd <USERNAME>
$ passwd awsc 
$ password ....<awsc password is Ac0n1te>


Make following folders
su awsc
cd /home/awsc
mkdir aconite
mkdir dist
mkdir converter

copy <release>.zip file into /home/awsc/aconite/dist

unzip <release>.zip file into /home/awsc/aconite/converter

cd /home/awsc/aconite/converter
chmod 775 *

ls -l 
...
lists all the mobileconverter jars and props files


-----------------------------------------
sudo mkdir /opt/awsc
sudo mv lib /opt/awsc/lib
sudo chmod 755 /opt/awsc/lib

sudo mv config /etc/opt/awsc
sudo chmod 755 /etc/opt/awsc

sudo mkdir /var/awsc
mkdir logs
sudo mv logs /var/awsc/logs
sudo chown -R awsc:awsc /var/awsc/logs
sudo chmod 755 /var/awsc/logs

sudo mkdir /opt/awsc/bin

sudo mv script/*.sh  /opt/awsc/bin

sudo mv script/init.d/*.sh  /etc/init.d

-----------------------------------------

move sysV files into /etc/init.d folder

Add to list of services using chkconfig (When server startup the service will be start and when it down service will be stop)

    $ sudo chkconfig awsc on

Run the service

    $ sudo service awsc start
	
Stop the service

    $ sudo service awsc stop
	
 Remove from list of services using chkconfig

    $ sudo chkconfig awsc off

////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////




